{"id":"746d19dd0ae847a0e721f41a638d9147","_format":"hh-sol-build-info-1","solcVersion":"0.8.0","solcLongVersion":"0.8.0+commit.c7dfd78e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/bank.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract Bank {\r\n  address owner;\r\n  bytes32[] public whitelistedSymbols; //token name\r\n  mapping(bytes32 => address) public whitelistedTokens;  // token->address\r\n  mapping(address => mapping(bytes32 => uint256)) public balances; // hold balances of token\r\n\r\n  constructor() {\r\n    owner = msg.sender;\r\n  }\r\n   function whitelistToken(bytes32 symbol, address tokenAddress) external {\r\n    require(msg.sender == owner, \"This function is not public!\");\r\n\r\n    whitelistedSymbols.push(symbol);\r\n    whitelistedTokens[symbol] = tokenAddress;\r\n  }\r\n\r\n  function getWhitelistedSymbols() external view returns(bytes32[] memory) {\r\n    return whitelistedSymbols;\r\n  }\r\n\r\n  function getWhitelistedTokenAddress(bytes32 symbol) external view returns(address) {\r\n    return whitelistedTokens[symbol];\r\n  }\r\n\r\n  receive() external payable {\r\n    balances[msg.sender]['Eth'] += msg.value;\r\n  } // receiver eth\r\n  \r\n  function withdrawEther(uint amount) external {\r\n    require(balances[msg.sender]['Eth'] >= amount, 'Insufficient funds');\r\n\r\n    balances[msg.sender]['Eth'] -= amount;\r\n    payable(msg.sender).call{value: amount}(\"\");\r\n  }\r\n\r\n  function depositTokens(uint256 amount, bytes32 symbol) external {\r\n    balances[msg.sender][symbol] += amount;\r\n    IERC20(whitelistedTokens[symbol]).transferFrom(msg.sender, address(this), amount);\r\n  }\r\n\r\n  function withdrawTokens(uint256 amount, bytes32 symbol) external {\r\n    require(balances[msg.sender][symbol] >= amount, 'Insufficient funds');\r\n\r\n    balances[msg.sender][symbol] -= amount;\r\n    IERC20(whitelistedTokens[symbol]).transfer(msg.sender, amount);\r\n  }\r\n\r\n  function getTokenBalance(bytes32 symbol) external view returns(uint256) {\r\n    return balances[msg.sender][symbol];\r\n  }\r\n}\r\n\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"9302","formattedMessage":"Warning: Return value of low-level calls not used.\n  --> contracts/bank.sol:39:5:\n   |\n39 |     payable(msg.sender).call{value: amount}(\"\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Return value of low-level calls not used.","severity":"warning","sourceLocation":{"end":1299,"file":"contracts/bank.sol","start":1256},"type":"Warning"}],"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"131:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"225:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":11,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":11,"src":"403:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":11,"src":"425:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":11,"src":"445:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:0"},"src":"388:72:0"},{"anonymous":false,"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"466:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":20,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":20,"src":"634:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":20,"src":"657:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":20,"src":"682:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:0"},"src":"619:78:0"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"703:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"794:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":26,"src":"820:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:0"},"scope":77,"src":"774:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"835:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":34,"src":"931:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":34,"src":"971:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:0"},"scope":77,"src":"912:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"986:202:0","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":44,"src":"1211:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":44,"src":"1223:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":44,"src":"1257:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:0"},"scope":77,"src":"1193:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1269:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":54,"src":"1557:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":54,"src":"1572:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":54,"src":"1612:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:0"},"scope":77,"src":"1538:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1627:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":64,"src":"2291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":64,"src":"2308:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":64,"src":"2342:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:0"},"scope":77,"src":"2274:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2354:287:0","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":76,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":76,"src":"2677:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":76,"src":"2699:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":76,"src":"2719:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":76,"src":"2758:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":73,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:0"},"scope":77,"src":"2646:118:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":78,"src":"202:2564:0"}],"src":"106:2661:0"},"id":0},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[389]},"id":390,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"285:196:1","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":389,"linearizedBaseContracts":[389],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":111,"nodeType":"Block","src":"717:140:1","statements":[{"id":110,"nodeType":"UncheckedBlock","src":"727:124:1","statements":[{"assignments":[93],"declarations":[{"constant":false,"id":93,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":110,"src":"751:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":97,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":94,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"763:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":95,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"767:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":98,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"786:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":99,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"790:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":105,"nodeType":"IfStatement","src":"782:28:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":91,"id":104,"nodeType":"Return","src":"793:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":107,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"838:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":91,"id":109,"nodeType":"Return","src":"824:16:1"}]}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"505:131:1","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":112,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":112,"src":"657:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":112,"src":"668:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:1"},"returnParameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":112,"src":"702:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":87,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":112,"src":"708:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:1"},"scope":389,"src":"641:216:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":139,"nodeType":"Block","src":"1078:113:1","statements":[{"id":138,"nodeType":"UncheckedBlock","src":"1088:97:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"1116:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1120:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":131,"nodeType":"IfStatement","src":"1112:28:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":123,"id":130,"nodeType":"Return","src":"1123:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":133,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1168:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":134,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"1172:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":123,"id":137,"nodeType":"Return","src":"1154:20:1"}]}]},"documentation":{"id":113,"nodeType":"StructuredDocumentation","src":"863:134:1","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":140,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":115,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":140,"src":"1018:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":140,"src":"1029:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:1"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":140,"src":"1063:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":119,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":140,"src":"1069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:1"},"scope":389,"src":"1002:189:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":181,"nodeType":"Block","src":"1415:417:1","statements":[{"id":180,"nodeType":"UncheckedBlock","src":"1425:401:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"1683:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":159,"nodeType":"IfStatement","src":"1679:28:1","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":151,"id":158,"nodeType":"Return","src":"1691:16:1"}},{"assignments":[161],"declarations":[{"constant":false,"id":161,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":180,"src":"1721:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":165,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":162,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"1733:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":163,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"1737:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":166,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"1756:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":167,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"1760:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"1765:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":175,"nodeType":"IfStatement","src":"1752:33:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":151,"id":174,"nodeType":"Return","src":"1768:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":177,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"1813:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":151,"id":179,"nodeType":"Return","src":"1799:16:1"}]}]},"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"1197:137:1","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":182,"src":"1355:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":142,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":182,"src":"1366:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":182,"src":"1400:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":147,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":182,"src":"1406:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:1"},"scope":389,"src":"1339:493:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":209,"nodeType":"Block","src":"2057:114:1","statements":[{"id":208,"nodeType":"UncheckedBlock","src":"2067:98:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2095:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":201,"nodeType":"IfStatement","src":"2091:29:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":193,"id":200,"nodeType":"Return","src":"2103:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"2148:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":204,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2152:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":193,"id":207,"nodeType":"Return","src":"2134:20:1"}]}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"1838:138:1","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":210,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":210,"src":"1997:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":210,"src":"2008:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":210,"src":"2042:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":210,"src":"2048:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:1"},"scope":389,"src":"1981:190:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":237,"nodeType":"Block","src":"2406:114:1","statements":[{"id":236,"nodeType":"UncheckedBlock","src":"2416:98:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":222,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"2444:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":229,"nodeType":"IfStatement","src":"2440:29:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":221,"id":228,"nodeType":"Return","src":"2452:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2497:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"2501:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":221,"id":235,"nodeType":"Return","src":"2483:20:1"}]}]},"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"2177:148:1","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":238,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nodeType":"FunctionDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":238,"src":"2346:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":238,"src":"2357:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:1"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":238,"src":"2391:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":217,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":238,"src":"2397:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:1"},"scope":389,"src":"2330:190:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":252,"nodeType":"Block","src":"2822:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"2839:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":249,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"2843:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":247,"id":251,"nodeType":"Return","src":"2832:12:1"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"2526:224:1","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":253,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":253,"src":"2768:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":253,"src":"2779:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:1"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":253,"src":"2813:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:1"},"scope":389,"src":"2755:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":267,"nodeType":"Block","src":"3189:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3206:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3210:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":262,"id":266,"nodeType":"Return","src":"3199:12:1"}]},"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"2857:260:1","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":268,"src":"3135:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":268,"src":"3146:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:1"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":268,"src":"3180:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:1"},"scope":389,"src":"3122:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"3532:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"3549:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":279,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"3553:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":277,"id":281,"nodeType":"Return","src":"3542:12:1"}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"3224:236:1","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":283,"src":"3478:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":283,"src":"3489:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:1"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":283,"src":"3523:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:1"},"scope":389,"src":"3465:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":297,"nodeType":"Block","src":"3917:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":293,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3934:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":294,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3938:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":292,"id":296,"nodeType":"Return","src":"3927:12:1"}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"3567:278:1","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":298,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":298,"src":"3863:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":298,"src":"3874:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:1"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":298,"src":"3908:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:1"},"scope":389,"src":"3850:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":312,"nodeType":"Block","src":"4466:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4483:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":309,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"4487:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":307,"id":311,"nodeType":"Return","src":"4476:12:1"}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"3952:442:1","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":313,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":313,"src":"4412:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":313,"src":"4423:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:1"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":313,"src":"4457:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:1"},"scope":389,"src":"4399:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":337,"nodeType":"Block","src":"5084:106:1","statements":[{"id":336,"nodeType":"UncheckedBlock","src":"5094:90:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":326,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5126:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"5131:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":329,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"5134:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5118:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":331,"nodeType":"ExpressionStatement","src":"5118:29:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"5168:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":333,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5172:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":324,"id":335,"nodeType":"Return","src":"5161:12:1"}]}]},"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"4501:453:1","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":338,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":338,"src":"4981:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":338,"src":"5000:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":338,"src":"5019:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":319,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:1"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":338,"src":"5075:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:1"},"scope":389,"src":"4959:231:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"5799:105:1","statements":[{"id":361,"nodeType":"UncheckedBlock","src":"5809:89:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":351,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"5841:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":354,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"5848:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5833:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"5833:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5882:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":358,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"5886:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":349,"id":360,"nodeType":"Return","src":"5875:12:1"}]}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"5196:473:1","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":363,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":363,"src":"5696:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":363,"src":"5715:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":363,"src":"5734:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":344,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:1"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":363,"src":"5790:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:1"},"scope":389,"src":"5674:230:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":387,"nodeType":"Block","src":"6675:105:1","statements":[{"id":386,"nodeType":"UncheckedBlock","src":"6685:89:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"6717:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":379,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6724:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6709:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"6709:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"6758:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":383,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"6762:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":374,"id":385,"nodeType":"Return","src":"6751:12:1"}]}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"5910:635:1","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":388,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":388,"src":"6572:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":388,"src":"6591:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":367,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":388,"src":"6610:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":369,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:1"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":388,"src":"6666:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:1"},"scope":389,"src":"6550:230:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":390,"src":"482:6300:1"}],"src":"107:6676:1"},"id":1},"contracts/bank.sol":{"ast":{"absolutePath":"contracts/bank.sol","exportedSymbols":{"Bank":[606],"IERC20":[77],"SafeMath":[389]},"id":607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":391,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":392,"nodeType":"ImportDirective","scope":607,"sourceUnit":78,"src":"60:56:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":393,"nodeType":"ImportDirective","scope":607,"sourceUnit":390,"src":"118:57:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":606,"linearizedBaseContracts":[606],"name":"Bank","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":606,"src":"198:13:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"198:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"functionSelector":"4762b976","id":398,"mutability":"mutable","name":"whitelistedSymbols","nodeType":"VariableDeclaration","scope":606,"src":"216:35:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[]"},"typeName":{"baseType":{"id":396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"216:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":397,"nodeType":"ArrayTypeName","src":"216:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"public"},{"constant":false,"functionSelector":"aa3d9a15","id":402,"mutability":"mutable","name":"whitelistedTokens","nodeType":"VariableDeclaration","scope":606,"src":"269:52:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":401,"keyType":{"id":399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"277:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"269:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueType":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"288:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"1f14df69","id":408,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":606,"src":"345:63:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"},"typeName":{"id":407,"keyType":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"353:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"345:47:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"},"valueType":{"id":406,"keyType":{"id":404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"372:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"364:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"383:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"body":{"id":416,"nodeType":"Block","src":"455:31:2","statements":[{"expression":{"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":411,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"462:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":412,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"470:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"470:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"462:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":415,"nodeType":"ExpressionStatement","src":"462:18:2"}]},"id":417,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"452:2:2"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"455:0:2"},"scope":606,"src":"441:45:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":444,"nodeType":"Block","src":"562:160:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":425,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"577:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"577:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":427,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"591:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"577:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546869732066756e6374696f6e206973206e6f74207075626c696321","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"598:30:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f2c2ad39aaedd46886e391bc901303d7e920974b9a1bcc34e31ec251a2cd32b","typeString":"literal_string \"This function is not public!\""},"value":"This function is not public!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f2c2ad39aaedd46886e391bc901303d7e920974b9a1bcc34e31ec251a2cd32b","typeString":"literal_string \"This function is not public!\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"569:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"ExpressionStatement","src":"569:60:2"},{"expression":{"arguments":[{"id":435,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"662:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":432,"name":"whitelistedSymbols","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"638:18:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"638:23:2","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"638:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"638:31:2"},{"expression":{"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":438,"name":"whitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"676:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":440,"indexExpression":{"id":439,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"694:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"676:25:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":441,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"704:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"676:40:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":443,"nodeType":"ExpressionStatement","src":"676:40:2"}]},"functionSelector":"069fdaae","id":445,"implemented":true,"kind":"function","modifiers":[],"name":"whitelistToken","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":445,"src":"515:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"515:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"tokenAddress","nodeType":"VariableDeclaration","scope":445,"src":"531:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"531:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"514:38:2"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"562:0:2"},"scope":606,"src":"491:231:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":453,"nodeType":"Block","src":"801:38:2","statements":[{"expression":{"id":451,"name":"whitelistedSymbols","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"815:18:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":450,"id":452,"nodeType":"Return","src":"808:25:2"}]},"functionSelector":"4b1e4aa5","id":454,"implemented":true,"kind":"function","modifiers":[],"name":"getWhitelistedSymbols","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"758:2:2"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":454,"src":"783:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"783:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":448,"nodeType":"ArrayTypeName","src":"783:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"782:18:2"},"scope":606,"src":"728:111:2","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":465,"nodeType":"Block","src":"928:45:2","statements":[{"expression":{"baseExpression":{"id":461,"name":"whitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"942:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":463,"indexExpression":{"id":462,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"960:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"942:25:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":460,"id":464,"nodeType":"Return","src":"935:32:2"}]},"functionSelector":"e8812788","id":466,"implemented":true,"kind":"function","modifiers":[],"name":"getWhitelistedTokenAddress","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":466,"src":"881:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"881:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"880:16:2"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":466,"src":"919:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"919:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"918:9:2"},"scope":606,"src":"845:128:2","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":479,"nodeType":"Block","src":"1006:53:2","statements":[{"expression":{"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":469,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1013:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":473,"indexExpression":{"expression":{"id":470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1022:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1022:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1013:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":474,"indexExpression":{"hexValue":"457468","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:5:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c10068c4e8f0b2905447ed0a679a3934513092c8a965b7a3d1ea67ea1cd0698","typeString":"literal_string \"Eth\""},"value":"Eth"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1013:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":475,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1044:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1044:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1013:40:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":478,"nodeType":"ExpressionStatement","src":"1013:40:2"}]},"id":480,"implemented":true,"kind":"receive","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":467,"nodeType":"ParameterList","parameters":[],"src":"986:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"1006:0:2"},"scope":606,"src":"979:80:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":517,"nodeType":"Block","src":"1128:177:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":486,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1143:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":489,"indexExpression":{"expression":{"id":487,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1152:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1152:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1143:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":491,"indexExpression":{"hexValue":"457468","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1164:5:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c10068c4e8f0b2905447ed0a679a3934513092c8a965b7a3d1ea67ea1cd0698","typeString":"literal_string \"Eth\""},"value":"Eth"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1143:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":492,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"1174:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1143:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1182:20:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1135:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1135:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"ExpressionStatement","src":"1135:68:2"},{"expression":{"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":497,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1212:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":501,"indexExpression":{"expression":{"id":498,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1221:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1221:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1212:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":502,"indexExpression":{"hexValue":"457468","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1233:5:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c10068c4e8f0b2905447ed0a679a3934513092c8a965b7a3d1ea67ea1cd0698","typeString":"literal_string \"Eth\""},"value":"Eth"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1212:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"1243:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1212:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":505,"nodeType":"ExpressionStatement","src":"1212:37:2"},{"expression":{"arguments":[{"hexValue":"","id":514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1296:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":508,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1264:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1264:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1256:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"1256:8:2","stateMutability":"payable","typeDescriptions":{}}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1256:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1256:24:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"1288:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1256:39:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1256:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"id":516,"nodeType":"ExpressionStatement","src":"1256:43:2"}]},"functionSelector":"3bed33ce","id":518,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawEther","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":518,"src":"1106:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint","nodeType":"ElementaryTypeName","src":"1106:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1105:13:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"1128:0:2"},"scope":606,"src":"1083:222:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":549,"nodeType":"Block","src":"1375:139:2","statements":[{"expression":{"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":525,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1382:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":529,"indexExpression":{"expression":{"id":526,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1391:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1391:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1382:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":530,"indexExpression":{"id":528,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"1403:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1382:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":531,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"1414:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1382:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":533,"nodeType":"ExpressionStatement","src":"1382:38:2"},{"expression":{"arguments":[{"expression":{"id":540,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1474:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1474:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":544,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1494:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Bank_$606","typeString":"contract Bank"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Bank_$606","typeString":"contract Bank"}],"id":543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1486:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:2","typeDescriptions":{}}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":546,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"1501:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":535,"name":"whitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"1434:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":537,"indexExpression":{"id":536,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"1452:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1434:25:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":534,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"1427:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1427:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":76,"src":"1427:46:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1427:81:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":548,"nodeType":"ExpressionStatement","src":"1427:81:2"}]},"functionSelector":"d15b223e","id":550,"implemented":true,"kind":"function","modifiers":[],"name":"depositTokens","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":550,"src":"1334:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1334:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":550,"src":"1350:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1350:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1333:32:2"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"1375:0:2"},"scope":606,"src":"1311:203:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":589,"nodeType":"Block","src":"1585:198:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":558,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1600:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":561,"indexExpression":{"expression":{"id":559,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1609:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1609:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1600:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":563,"indexExpression":{"id":562,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"1621:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1600:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":564,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"1632:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1600:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1640:20:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1592:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1592:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":568,"nodeType":"ExpressionStatement","src":"1592:69:2"},{"expression":{"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":569,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1670:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":573,"indexExpression":{"expression":{"id":570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1679:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1679:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1670:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":574,"indexExpression":{"id":572,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"1691:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"1702:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1670:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":577,"nodeType":"ExpressionStatement","src":"1670:38:2"},{"expression":{"arguments":[{"expression":{"id":584,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1758:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1758:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"1770:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":579,"name":"whitelistedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"1722:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":581,"indexExpression":{"id":580,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"1740:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1722:25:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":578,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"1715:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1715:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1715:42:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1715:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":588,"nodeType":"ExpressionStatement","src":"1715:62:2"}]},"functionSelector":"8f97994b","id":590,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawTokens","nodeType":"FunctionDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":590,"src":"1544:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1544:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":590,"src":"1560:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1560:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1543:32:2"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"1585:0:2"},"scope":606,"src":"1520:263:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":604,"nodeType":"Block","src":"1861:48:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":597,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1875:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$","typeString":"mapping(address => mapping(bytes32 => uint256))"}},"id":600,"indexExpression":{"expression":{"id":598,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1884:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1884:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1875:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":602,"indexExpression":{"id":601,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"1896:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1875:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":596,"id":603,"nodeType":"Return","src":"1868:35:2"}]},"functionSelector":"88db6ac6","id":605,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenBalance","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":605,"src":"1814:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1814:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1813:16:2"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":605,"src":"1852:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"1852:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1851:9:2"},"scope":606,"src":"1789:120:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":607,"src":"179:1733:2"}],"src":"33:1883:2"},"id":2}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e8fd0ae6979a6e3ada696877010759725fdbc8320829900f76947661cb990b664736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E DUP16 0xD0 0xAE PUSH10 0x79A6E3ADA69687701075 SWAP8 0x25 REVERT 0xBC DUP4 KECCAK256 DUP3 SWAP10 STOP 0xF7 PUSH10 0x47661CB990B664736F6C PUSH4 0x43000800 STOP CALLER ","sourceMap":"482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e8fd0ae6979a6e3ada696877010759725fdbc8320829900f76947661cb990b664736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E DUP16 0xD0 0xAE PUSH10 0x79A6E3ADA69687701075 SWAP8 0x25 REVERT 0xBC DUP4 KECCAK256 DUP3 SWAP10 STOP 0xF7 PUSH10 0x47661CB990B664736F6C PUSH4 0x43000800 STOP CALLER ","sourceMap":"482:6300:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}"}},"contracts/bank.sol":{"Bank":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"symbol","type":"bytes32"}],"name":"depositTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"symbol","type":"bytes32"}],"name":"getTokenBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWhitelistedSymbols","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"symbol","type":"bytes32"}],"name":"getWhitelistedTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"symbol","type":"bytes32"},{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"whitelistToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"whitelistedSymbols","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"whitelistedTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawEther","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"symbol","type":"bytes32"}],"name":"withdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061101c806100606000396000f3fe6080604052600436106100955760003560e01c806388db6ac61161005957806388db6ac61461021f5780638f97994b1461025c578063aa3d9a1514610285578063d15b223e146102c2578063e8812788146102eb57610123565b8063069fdaae146101285780631f14df69146101515780633bed33ce1461018e5780634762b976146101b75780634b1e4aa5146101f457610123565b366101235734600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45746800000000000000000000000000000000000000000000000000000000008152602001908152602001600020600082825461011a9190610e7f565b92505081905550005b600080fd5b34801561013457600080fd5b5061014f600480360381019061014a9190610b15565b610328565b005b34801561015d57600080fd5b5061017860048036038101906101739190610a87565b610435565b6040516101859190610e0f565b60405180910390f35b34801561019a57600080fd5b506101b560048036038101906101b09190610b51565b61045a565b005b3480156101c357600080fd5b506101de60048036038101906101d99190610b51565b610600565b6040516101eb9190610db4565b60405180910390f35b34801561020057600080fd5b50610209610624565b6040516102169190610d92565b60405180910390f35b34801561022b57600080fd5b5061024660048036038101906102419190610aec565b61067c565b6040516102539190610e0f565b60405180910390f35b34801561026857600080fd5b50610283600480360381019061027e9190610b7a565b6106d6565b005b34801561029157600080fd5b506102ac60048036038101906102a79190610aec565b610895565b6040516102b99190610d17565b60405180910390f35b3480156102ce57600080fd5b506102e960048036038101906102e49190610b7a565b6108c8565b005b3480156102f757600080fd5b50610312600480360381019061030d9190610aec565b6109f6565b60405161031f9190610d17565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad90610def565b60405180910390fd5b6001829080600181540180825580915050600190039060005260206000200160009091909190915055806002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6003602052816000526040600020602052806000526040600020600091509150505481565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4574680000000000000000000000000000000000000000000000000000000000815260200190815260200160002054101561050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050490610dcf565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45746800000000000000000000000000000000000000000000000000000000008152602001908152602001600020600082825461058d9190610ed5565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16816040516105b890610d02565b60006040518083038185875af1925050503d80600081146105f5576040519150601f19603f3d011682016040523d82523d6000602084013e6105fa565b606091505b50505050565b6001818154811061061057600080fd5b906000526020600020016000915090505481565b6060600180548060200260200160405190810160405280929190818152602001828054801561067257602002820191906000526020600020905b81548152602001906001019080831161065e575b5050505050905090565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020549050919050565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020541015610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076090610dcf565b60405180910390fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546107c99190610ed5565b925050819055506002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161083e929190610d69565b602060405180830381600087803b15801561085857600080fd5b505af115801561086c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108909190610ac3565b505050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546109289190610e7f565b925050819055506002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161099f93929190610d32565b602060405180830381600087803b1580156109b957600080fd5b505af11580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f19190610ac3565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600081359050610a4281610f8a565b92915050565b600081519050610a5781610fa1565b92915050565b600081359050610a6c81610fb8565b92915050565b600081359050610a8181610fcf565b92915050565b60008060408385031215610a9a57600080fd5b6000610aa885828601610a33565b9250506020610ab985828601610a5d565b9150509250929050565b600060208284031215610ad557600080fd5b6000610ae384828501610a48565b91505092915050565b600060208284031215610afe57600080fd5b6000610b0c84828501610a5d565b91505092915050565b60008060408385031215610b2857600080fd5b6000610b3685828601610a5d565b9250506020610b4785828601610a33565b9150509250929050565b600060208284031215610b6357600080fd5b6000610b7184828501610a72565b91505092915050565b60008060408385031215610b8d57600080fd5b6000610b9b85828601610a72565b9250506020610bac85828601610a5d565b9150509250929050565b6000610bc28383610c3b565b60208301905092915050565b610bd781610f09565b82525050565b6000610be882610e3a565b610bf28185610e52565b9350610bfd83610e2a565b8060005b83811015610c2e578151610c158882610bb6565b9750610c2083610e45565b925050600181019050610c01565b5085935050505092915050565b610c4481610f27565b82525050565b610c5381610f27565b82525050565b6000610c66601283610e6e565b91507f496e73756666696369656e742066756e647300000000000000000000000000006000830152602082019050919050565b6000610ca6601c83610e6e565b91507f546869732066756e6374696f6e206973206e6f74207075626c696321000000006000830152602082019050919050565b6000610ce6600083610e63565b9150600082019050919050565b610cfc81610f51565b82525050565b6000610d0d82610cd9565b9150819050919050565b6000602082019050610d2c6000830184610bce565b92915050565b6000606082019050610d476000830186610bce565b610d546020830185610bce565b610d616040830184610cf3565b949350505050565b6000604082019050610d7e6000830185610bce565b610d8b6020830184610cf3565b9392505050565b60006020820190508181036000830152610dac8184610bdd565b905092915050565b6000602082019050610dc96000830184610c4a565b92915050565b60006020820190508181036000830152610de881610c59565b9050919050565b60006020820190508181036000830152610e0881610c99565b9050919050565b6000602082019050610e246000830184610cf3565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610e8a82610f51565b9150610e9583610f51565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eca57610ec9610f5b565b5b828201905092915050565b6000610ee082610f51565b9150610eeb83610f51565b925082821015610efe57610efd610f5b565b5b828203905092915050565b6000610f1482610f31565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610f9381610f09565b8114610f9e57600080fd5b50565b610faa81610f1b565b8114610fb557600080fd5b50565b610fc181610f27565b8114610fcc57600080fd5b50565b610fd881610f51565b8114610fe357600080fd5b5056fea264697066735822122045f0097eece1a6c2ea79b151dfb93b51cfa0e088aab60177e59ec6cb0016e7bf64736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x101C DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88DB6AC6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x88DB6AC6 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x8F97994B EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xAA3D9A15 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xD15B223E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xE8812788 EQ PUSH2 0x2EB JUMPI PUSH2 0x123 JUMP JUMPDEST DUP1 PUSH4 0x69FDAAE EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x1F14DF69 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x3BED33CE EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x4762B976 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x4B1E4AA5 EQ PUSH2 0x1F4 JUMPI PUSH2 0x123 JUMP JUMPDEST CALLDATASIZE PUSH2 0x123 JUMPI CALLVALUE PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH32 0x4574680000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AD SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH32 0x4574680000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP1 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH32 0x4574680000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x58D SWAP2 SWAP1 PUSH2 0xED5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH2 0x5B8 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x65E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x760 SWAP1 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0xED5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP3 SWAP2 SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x86C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x890 SWAP2 SWAP1 PUSH2 0xAC3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F1 SWAP2 SWAP1 PUSH2 0xAC3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA42 DUP2 PUSH2 0xF8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA57 DUP2 PUSH2 0xFA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA6C DUP2 PUSH2 0xFB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA81 DUP2 PUSH2 0xFCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAA8 DUP6 DUP3 DUP7 ADD PUSH2 0xA33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAB9 DUP6 DUP3 DUP7 ADD PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAE3 DUP5 DUP3 DUP6 ADD PUSH2 0xA48 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB0C DUP5 DUP3 DUP6 ADD PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB36 DUP6 DUP3 DUP7 ADD PUSH2 0xA5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB47 DUP6 DUP3 DUP7 ADD PUSH2 0xA33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB71 DUP5 DUP3 DUP6 ADD PUSH2 0xA72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB9B DUP6 DUP3 DUP7 ADD PUSH2 0xA72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBAC DUP6 DUP3 DUP7 ADD PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC2 DUP4 DUP4 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBD7 DUP2 PUSH2 0xF09 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE8 DUP3 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0xBF2 DUP2 DUP6 PUSH2 0xE52 JUMP JUMPDEST SWAP4 POP PUSH2 0xBFD DUP4 PUSH2 0xE2A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC2E JUMPI DUP2 MLOAD PUSH2 0xC15 DUP9 DUP3 PUSH2 0xBB6 JUMP JUMPDEST SWAP8 POP PUSH2 0xC20 DUP4 PUSH2 0xE45 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xC01 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC44 DUP2 PUSH2 0xF27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xF27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC66 PUSH1 0x12 DUP4 PUSH2 0xE6E JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA6 PUSH1 0x1C DUP4 PUSH2 0xE6E JUMP JUMPDEST SWAP2 POP PUSH32 0x546869732066756E6374696F6E206973206E6F74207075626C69632100000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE6 PUSH1 0x0 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFC DUP2 PUSH2 0xF51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0D DUP3 PUSH2 0xCD9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD47 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0xD54 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0xD61 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCF3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD7E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0xD8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDAC DUP2 DUP5 PUSH2 0xBDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDE8 DUP2 PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE08 DUP2 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE24 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8A DUP3 PUSH2 0xF51 JUMP JUMPDEST SWAP2 POP PUSH2 0xE95 DUP4 PUSH2 0xF51 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xECA JUMPI PUSH2 0xEC9 PUSH2 0xF5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE0 DUP3 PUSH2 0xF51 JUMP JUMPDEST SWAP2 POP PUSH2 0xEEB DUP4 PUSH2 0xF51 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFD PUSH2 0xF5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF14 DUP3 PUSH2 0xF31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF93 DUP2 PUSH2 0xF09 JUMP JUMPDEST DUP2 EQ PUSH2 0xF9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFAA DUP2 PUSH2 0xF1B JUMP JUMPDEST DUP2 EQ PUSH2 0xFB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFC1 DUP2 PUSH2 0xF27 JUMP JUMPDEST DUP2 EQ PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFD8 DUP2 PUSH2 0xF51 JUMP JUMPDEST DUP2 EQ PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT CREATE MULMOD PUSH31 0xECE1A6C2EA79B151DFB93B51CFA0E088AAB60177E59EC6CB0016E7BF64736F PUSH13 0x63430008000033000000000000 ","sourceMap":"179:1733:2:-:0;;;441:45;;;;;;;;;;470:10;462:5;;:18;;;;;;;;;;;;;;;;;;179:1733;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10712:3","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:3","statements":[{"nodeType":"YulAssignment","src":"69:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:3"},"nodeType":"YulFunctionCall","src":"78:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:3"},"nodeType":"YulFunctionCall","src":"107:33:3"},"nodeType":"YulExpressionStatement","src":"107:33:3"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:3","type":""}],"src":"7:139:3"},{"body":{"nodeType":"YulBlock","src":"212:77:3","statements":[{"nodeType":"YulAssignment","src":"222:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"237:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"231:5:3"},"nodeType":"YulFunctionCall","src":"231:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"222:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"277:5:3"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"253:23:3"},"nodeType":"YulFunctionCall","src":"253:30:3"},"nodeType":"YulExpressionStatement","src":"253:30:3"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"190:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"198:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"206:5:3","type":""}],"src":"152:137:3"},{"body":{"nodeType":"YulBlock","src":"347:87:3","statements":[{"nodeType":"YulAssignment","src":"357:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"379:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"366:12:3"},"nodeType":"YulFunctionCall","src":"366:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"357:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"422:5:3"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"395:26:3"},"nodeType":"YulFunctionCall","src":"395:33:3"},"nodeType":"YulExpressionStatement","src":"395:33:3"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"325:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"333:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"341:5:3","type":""}],"src":"295:139:3"},{"body":{"nodeType":"YulBlock","src":"492:87:3","statements":[{"nodeType":"YulAssignment","src":"502:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"524:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"511:12:3"},"nodeType":"YulFunctionCall","src":"511:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"502:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"567:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"540:26:3"},"nodeType":"YulFunctionCall","src":"540:33:3"},"nodeType":"YulExpressionStatement","src":"540:33:3"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"470:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"478:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"486:5:3","type":""}],"src":"440:139:3"},{"body":{"nodeType":"YulBlock","src":"668:324:3","statements":[{"body":{"nodeType":"YulBlock","src":"714:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"723:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"726:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"716:6:3"},"nodeType":"YulFunctionCall","src":"716:12:3"},"nodeType":"YulExpressionStatement","src":"716:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"689:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"698:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"685:3:3"},"nodeType":"YulFunctionCall","src":"685:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"710:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"681:3:3"},"nodeType":"YulFunctionCall","src":"681:32:3"},"nodeType":"YulIf","src":"678:2:3"},{"nodeType":"YulBlock","src":"740:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"755:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"759:6:3","type":""}]},{"nodeType":"YulAssignment","src":"784:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"819:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"830:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"815:3:3"},"nodeType":"YulFunctionCall","src":"815:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"839:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"794:20:3"},"nodeType":"YulFunctionCall","src":"794:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"784:6:3"}]}]},{"nodeType":"YulBlock","src":"867:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"882:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"896:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"886:6:3","type":""}]},{"nodeType":"YulAssignment","src":"912:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"947:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"958:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"943:3:3"},"nodeType":"YulFunctionCall","src":"943:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"967:7:3"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"922:20:3"},"nodeType":"YulFunctionCall","src":"922:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"912:6:3"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"630:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"641:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"653:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"661:6:3","type":""}],"src":"585:407:3"},{"body":{"nodeType":"YulBlock","src":"1072:204:3","statements":[{"body":{"nodeType":"YulBlock","src":"1118:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1127:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1130:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1120:6:3"},"nodeType":"YulFunctionCall","src":"1120:12:3"},"nodeType":"YulExpressionStatement","src":"1120:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1093:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1102:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1089:3:3"},"nodeType":"YulFunctionCall","src":"1089:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1114:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1085:3:3"},"nodeType":"YulFunctionCall","src":"1085:32:3"},"nodeType":"YulIf","src":"1082:2:3"},{"nodeType":"YulBlock","src":"1144:125:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1159:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1173:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1163:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1188:71:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1231:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1242:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1227:3:3"},"nodeType":"YulFunctionCall","src":"1227:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1251:7:3"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"1198:28:3"},"nodeType":"YulFunctionCall","src":"1198:61:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1188:6:3"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1042:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1053:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1065:6:3","type":""}],"src":"998:278:3"},{"body":{"nodeType":"YulBlock","src":"1348:196:3","statements":[{"body":{"nodeType":"YulBlock","src":"1394:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1403:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1406:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1396:6:3"},"nodeType":"YulFunctionCall","src":"1396:12:3"},"nodeType":"YulExpressionStatement","src":"1396:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1369:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1378:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1365:3:3"},"nodeType":"YulFunctionCall","src":"1365:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1390:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1361:3:3"},"nodeType":"YulFunctionCall","src":"1361:32:3"},"nodeType":"YulIf","src":"1358:2:3"},{"nodeType":"YulBlock","src":"1420:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1435:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1449:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1439:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1464:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1499:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1510:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1495:3:3"},"nodeType":"YulFunctionCall","src":"1495:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1519:7:3"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1474:20:3"},"nodeType":"YulFunctionCall","src":"1474:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1464:6:3"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1318:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1329:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1341:6:3","type":""}],"src":"1282:262:3"},{"body":{"nodeType":"YulBlock","src":"1633:324:3","statements":[{"body":{"nodeType":"YulBlock","src":"1679:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1688:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1691:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1681:6:3"},"nodeType":"YulFunctionCall","src":"1681:12:3"},"nodeType":"YulExpressionStatement","src":"1681:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1654:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1663:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1650:3:3"},"nodeType":"YulFunctionCall","src":"1650:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1675:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1646:3:3"},"nodeType":"YulFunctionCall","src":"1646:32:3"},"nodeType":"YulIf","src":"1643:2:3"},{"nodeType":"YulBlock","src":"1705:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1720:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1724:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1749:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1784:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1795:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1780:3:3"},"nodeType":"YulFunctionCall","src":"1780:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1804:7:3"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1759:20:3"},"nodeType":"YulFunctionCall","src":"1759:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1749:6:3"}]}]},{"nodeType":"YulBlock","src":"1832:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1847:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1861:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1851:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1877:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1912:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1923:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1908:3:3"},"nodeType":"YulFunctionCall","src":"1908:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1932:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1887:20:3"},"nodeType":"YulFunctionCall","src":"1887:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1877:6:3"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1595:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1606:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1618:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1626:6:3","type":""}],"src":"1550:407:3"},{"body":{"nodeType":"YulBlock","src":"2029:196:3","statements":[{"body":{"nodeType":"YulBlock","src":"2075:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2084:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2077:6:3"},"nodeType":"YulFunctionCall","src":"2077:12:3"},"nodeType":"YulExpressionStatement","src":"2077:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2050:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"2059:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2046:3:3"},"nodeType":"YulFunctionCall","src":"2046:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"2071:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2042:3:3"},"nodeType":"YulFunctionCall","src":"2042:32:3"},"nodeType":"YulIf","src":"2039:2:3"},{"nodeType":"YulBlock","src":"2101:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2116:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2130:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2120:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2145:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2180:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2191:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2176:3:3"},"nodeType":"YulFunctionCall","src":"2176:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2200:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2155:20:3"},"nodeType":"YulFunctionCall","src":"2155:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2145:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1999:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2010:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2022:6:3","type":""}],"src":"1963:262:3"},{"body":{"nodeType":"YulBlock","src":"2314:324:3","statements":[{"body":{"nodeType":"YulBlock","src":"2360:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2369:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2372:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2362:6:3"},"nodeType":"YulFunctionCall","src":"2362:12:3"},"nodeType":"YulExpressionStatement","src":"2362:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2335:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"2344:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2331:3:3"},"nodeType":"YulFunctionCall","src":"2331:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"2356:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2327:3:3"},"nodeType":"YulFunctionCall","src":"2327:32:3"},"nodeType":"YulIf","src":"2324:2:3"},{"nodeType":"YulBlock","src":"2386:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2401:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2415:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2405:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2430:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2465:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2476:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:3"},"nodeType":"YulFunctionCall","src":"2461:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2485:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2440:20:3"},"nodeType":"YulFunctionCall","src":"2440:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2430:6:3"}]}]},{"nodeType":"YulBlock","src":"2513:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2528:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2542:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2532:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2558:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2593:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2604:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:3"},"nodeType":"YulFunctionCall","src":"2589:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2613:7:3"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2568:20:3"},"nodeType":"YulFunctionCall","src":"2568:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2558:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2276:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2287:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2299:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2307:6:3","type":""}],"src":"2231:407:3"},{"body":{"nodeType":"YulBlock","src":"2724:99:3","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2768:6:3"},{"name":"pos","nodeType":"YulIdentifier","src":"2776:3:3"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"2734:33:3"},"nodeType":"YulFunctionCall","src":"2734:46:3"},"nodeType":"YulExpressionStatement","src":"2734:46:3"},{"nodeType":"YulAssignment","src":"2789:28:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2807:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"2812:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2803:3:3"},"nodeType":"YulFunctionCall","src":"2803:14:3"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"2789:10:3"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"2697:6:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2705:3:3","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"2713:10:3","type":""}],"src":"2644:179:3"},{"body":{"nodeType":"YulBlock","src":"2894:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2911:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2934:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2916:17:3"},"nodeType":"YulFunctionCall","src":"2916:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:3"},"nodeType":"YulFunctionCall","src":"2904:37:3"},"nodeType":"YulExpressionStatement","src":"2904:37:3"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2882:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2889:3:3","type":""}],"src":"2829:118:3"},{"body":{"nodeType":"YulBlock","src":"3107:608:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3117:68:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3179:5:3"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3131:47:3"},"nodeType":"YulFunctionCall","src":"3131:54:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3121:6:3","type":""}]},{"nodeType":"YulAssignment","src":"3194:93:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3275:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"3280:6:3"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3201:73:3"},"nodeType":"YulFunctionCall","src":"3201:86:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3194:3:3"}]},{"nodeType":"YulVariableDeclaration","src":"3296:71:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3361:5:3"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3311:49:3"},"nodeType":"YulFunctionCall","src":"3311:56:3"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"3300:7:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3376:21:3","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"3390:7:3"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3380:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"3466:224:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3480:34:3","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3507:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3501:5:3"},"nodeType":"YulFunctionCall","src":"3501:13:3"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"3484:13:3","type":""}]},{"nodeType":"YulAssignment","src":"3527:70:3","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"3578:13:3"},{"name":"pos","nodeType":"YulIdentifier","src":"3593:3:3"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"3534:43:3"},"nodeType":"YulFunctionCall","src":"3534:63:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3527:3:3"}]},{"nodeType":"YulAssignment","src":"3610:70:3","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3673:6:3"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3620:52:3"},"nodeType":"YulFunctionCall","src":"3620:60:3"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3610:6:3"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3428:1:3"},{"name":"length","nodeType":"YulIdentifier","src":"3431:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3425:2:3"},"nodeType":"YulFunctionCall","src":"3425:13:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3439:18:3","statements":[{"nodeType":"YulAssignment","src":"3441:14:3","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3450:1:3"},{"kind":"number","nodeType":"YulLiteral","src":"3453:1:3","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3446:3:3"},"nodeType":"YulFunctionCall","src":"3446:9:3"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3441:1:3"}]}]},"pre":{"nodeType":"YulBlock","src":"3410:14:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3412:10:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3421:1:3","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3416:1:3","type":""}]}]},"src":"3406:284:3"},{"nodeType":"YulAssignment","src":"3699:10:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"3706:3:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3699:3:3"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3086:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3093:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3102:3:3","type":""}],"src":"2983:732:3"},{"body":{"nodeType":"YulBlock","src":"3776:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3793:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3816:5:3"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3798:17:3"},"nodeType":"YulFunctionCall","src":"3798:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3786:6:3"},"nodeType":"YulFunctionCall","src":"3786:37:3"},"nodeType":"YulExpressionStatement","src":"3786:37:3"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3764:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3771:3:3","type":""}],"src":"3721:108:3"},{"body":{"nodeType":"YulBlock","src":"3900:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3917:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3940:5:3"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3922:17:3"},"nodeType":"YulFunctionCall","src":"3922:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3910:6:3"},"nodeType":"YulFunctionCall","src":"3910:37:3"},"nodeType":"YulExpressionStatement","src":"3910:37:3"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3888:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3895:3:3","type":""}],"src":"3835:118:3"},{"body":{"nodeType":"YulBlock","src":"4105:170:3","statements":[{"nodeType":"YulAssignment","src":"4115:74:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4181:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4186:2:3","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4122:58:3"},"nodeType":"YulFunctionCall","src":"4122:67:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4115:3:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4210:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4215:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4206:3:3"},"nodeType":"YulFunctionCall","src":"4206:11:3"},{"kind":"string","nodeType":"YulLiteral","src":"4219:20:3","type":"","value":"Insufficient funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4199:6:3"},"nodeType":"YulFunctionCall","src":"4199:41:3"},"nodeType":"YulExpressionStatement","src":"4199:41:3"},{"nodeType":"YulAssignment","src":"4250:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4261:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4266:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4257:3:3"},"nodeType":"YulFunctionCall","src":"4257:12:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4250:3:3"}]}]},"name":"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4093:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4101:3:3","type":""}],"src":"3959:316:3"},{"body":{"nodeType":"YulBlock","src":"4427:180:3","statements":[{"nodeType":"YulAssignment","src":"4437:74:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4503:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4508:2:3","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4444:58:3"},"nodeType":"YulFunctionCall","src":"4444:67:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4437:3:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4532:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4537:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4528:3:3"},"nodeType":"YulFunctionCall","src":"4528:11:3"},{"kind":"string","nodeType":"YulLiteral","src":"4541:30:3","type":"","value":"This function is not public!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4521:6:3"},"nodeType":"YulFunctionCall","src":"4521:51:3"},"nodeType":"YulExpressionStatement","src":"4521:51:3"},{"nodeType":"YulAssignment","src":"4582:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4598:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4589:3:3"},"nodeType":"YulFunctionCall","src":"4589:12:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4582:3:3"}]}]},"name":"abi_encode_t_stringliteral_6f2c2ad39aaedd46886e391bc901303d7e920974b9a1bcc34e31ec251a2cd32b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4415:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4423:3:3","type":""}],"src":"4281:326:3"},{"body":{"nodeType":"YulBlock","src":"4776:134:3","statements":[{"nodeType":"YulAssignment","src":"4786:90:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4869:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4874:1:3","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4793:75:3"},"nodeType":"YulFunctionCall","src":"4793:83:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4786:3:3"}]},{"nodeType":"YulAssignment","src":"4886:18:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4897:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4902:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4893:3:3"},"nodeType":"YulFunctionCall","src":"4893:11:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4886:3:3"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4764:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4772:3:3","type":""}],"src":"4613:297:3"},{"body":{"nodeType":"YulBlock","src":"4981:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4998:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5021:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5003:17:3"},"nodeType":"YulFunctionCall","src":"5003:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4991:6:3"},"nodeType":"YulFunctionCall","src":"4991:37:3"},"nodeType":"YulExpressionStatement","src":"4991:37:3"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4969:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4976:3:3","type":""}],"src":"4916:118:3"},{"body":{"nodeType":"YulBlock","src":"5228:191:3","statements":[{"nodeType":"YulAssignment","src":"5239:154:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5389:3:3"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5246:141:3"},"nodeType":"YulFunctionCall","src":"5246:147:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5239:3:3"}]},{"nodeType":"YulAssignment","src":"5403:10:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"5410:3:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5403:3:3"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5215:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5224:3:3","type":""}],"src":"5040:379:3"},{"body":{"nodeType":"YulBlock","src":"5523:124:3","statements":[{"nodeType":"YulAssignment","src":"5533:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5545:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5556:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5541:3:3"},"nodeType":"YulFunctionCall","src":"5541:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5533:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5613:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5637:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5622:3:3"},"nodeType":"YulFunctionCall","src":"5622:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5569:43:3"},"nodeType":"YulFunctionCall","src":"5569:71:3"},"nodeType":"YulExpressionStatement","src":"5569:71:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5495:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5507:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5518:4:3","type":""}],"src":"5425:222:3"},{"body":{"nodeType":"YulBlock","src":"5807:288:3","statements":[{"nodeType":"YulAssignment","src":"5817:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5829:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5840:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5825:3:3"},"nodeType":"YulFunctionCall","src":"5825:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5817:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5897:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5910:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5921:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5906:3:3"},"nodeType":"YulFunctionCall","src":"5906:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5853:43:3"},"nodeType":"YulFunctionCall","src":"5853:71:3"},"nodeType":"YulExpressionStatement","src":"5853:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5978:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5991:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6002:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5987:3:3"},"nodeType":"YulFunctionCall","src":"5987:18:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5934:43:3"},"nodeType":"YulFunctionCall","src":"5934:72:3"},"nodeType":"YulExpressionStatement","src":"5934:72:3"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6060:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6073:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6084:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6069:3:3"},"nodeType":"YulFunctionCall","src":"6069:18:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6016:43:3"},"nodeType":"YulFunctionCall","src":"6016:72:3"},"nodeType":"YulExpressionStatement","src":"6016:72:3"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5763:9:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5775:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5783:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5791:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5802:4:3","type":""}],"src":"5653:442:3"},{"body":{"nodeType":"YulBlock","src":"6227:206:3","statements":[{"nodeType":"YulAssignment","src":"6237:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6249:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6260:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6245:3:3"},"nodeType":"YulFunctionCall","src":"6245:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6237:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6317:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6330:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6341:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6326:3:3"},"nodeType":"YulFunctionCall","src":"6326:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6273:43:3"},"nodeType":"YulFunctionCall","src":"6273:71:3"},"nodeType":"YulExpressionStatement","src":"6273:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6398:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6411:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6422:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6407:3:3"},"nodeType":"YulFunctionCall","src":"6407:18:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6354:43:3"},"nodeType":"YulFunctionCall","src":"6354:72:3"},"nodeType":"YulExpressionStatement","src":"6354:72:3"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6191:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6203:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6211:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6222:4:3","type":""}],"src":"6101:332:3"},{"body":{"nodeType":"YulBlock","src":"6587:225:3","statements":[{"nodeType":"YulAssignment","src":"6597:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6609:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6620:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6605:3:3"},"nodeType":"YulFunctionCall","src":"6605:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6597:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6644:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6655:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6640:3:3"},"nodeType":"YulFunctionCall","src":"6640:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6663:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"6669:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6659:3:3"},"nodeType":"YulFunctionCall","src":"6659:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6633:6:3"},"nodeType":"YulFunctionCall","src":"6633:47:3"},"nodeType":"YulExpressionStatement","src":"6633:47:3"},{"nodeType":"YulAssignment","src":"6689:116:3","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6791:6:3"},{"name":"tail","nodeType":"YulIdentifier","src":"6800:4:3"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6697:93:3"},"nodeType":"YulFunctionCall","src":"6697:108:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6689:4:3"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6559:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6571:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6582:4:3","type":""}],"src":"6439:373:3"},{"body":{"nodeType":"YulBlock","src":"6916:124:3","statements":[{"nodeType":"YulAssignment","src":"6926:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6938:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6949:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6934:3:3"},"nodeType":"YulFunctionCall","src":"6934:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6926:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7006:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7019:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7030:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7015:3:3"},"nodeType":"YulFunctionCall","src":"7015:17:3"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6962:43:3"},"nodeType":"YulFunctionCall","src":"6962:71:3"},"nodeType":"YulExpressionStatement","src":"6962:71:3"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6888:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6900:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6911:4:3","type":""}],"src":"6818:222:3"},{"body":{"nodeType":"YulBlock","src":"7217:248:3","statements":[{"nodeType":"YulAssignment","src":"7227:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7239:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7250:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7235:3:3"},"nodeType":"YulFunctionCall","src":"7235:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7227:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7274:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7285:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7270:3:3"},"nodeType":"YulFunctionCall","src":"7270:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7293:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"7299:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7289:3:3"},"nodeType":"YulFunctionCall","src":"7289:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7263:6:3"},"nodeType":"YulFunctionCall","src":"7263:47:3"},"nodeType":"YulExpressionStatement","src":"7263:47:3"},{"nodeType":"YulAssignment","src":"7319:139:3","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7453:4:3"}],"functionName":{"name":"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7327:124:3"},"nodeType":"YulFunctionCall","src":"7327:131:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7319:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7197:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7212:4:3","type":""}],"src":"7046:419:3"},{"body":{"nodeType":"YulBlock","src":"7642:248:3","statements":[{"nodeType":"YulAssignment","src":"7652:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7664:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7675:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7660:3:3"},"nodeType":"YulFunctionCall","src":"7660:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7652:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7699:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7710:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7695:3:3"},"nodeType":"YulFunctionCall","src":"7695:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7718:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"7724:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7714:3:3"},"nodeType":"YulFunctionCall","src":"7714:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7688:6:3"},"nodeType":"YulFunctionCall","src":"7688:47:3"},"nodeType":"YulExpressionStatement","src":"7688:47:3"},{"nodeType":"YulAssignment","src":"7744:139:3","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7878:4:3"}],"functionName":{"name":"abi_encode_t_stringliteral_6f2c2ad39aaedd46886e391bc901303d7e920974b9a1bcc34e31ec251a2cd32b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7752:124:3"},"nodeType":"YulFunctionCall","src":"7752:131:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7744:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_6f2c2ad39aaedd46886e391bc901303d7e920974b9a1bcc34e31ec251a2cd32b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7622:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7637:4:3","type":""}],"src":"7471:419:3"},{"body":{"nodeType":"YulBlock","src":"7994:124:3","statements":[{"nodeType":"YulAssignment","src":"8004:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8016:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"8027:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8012:3:3"},"nodeType":"YulFunctionCall","src":"8012:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8004:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8084:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8097:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"8108:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8093:3:3"},"nodeType":"YulFunctionCall","src":"8093:17:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8040:43:3"},"nodeType":"YulFunctionCall","src":"8040:71:3"},"nodeType":"YulExpressionStatement","src":"8040:71:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7966:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7978:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7989:4:3","type":""}],"src":"7896:222:3"},{"body":{"nodeType":"YulBlock","src":"8196:60:3","statements":[{"nodeType":"YulAssignment","src":"8206:11:3","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8214:3:3"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8206:4:3"}]},{"nodeType":"YulAssignment","src":"8227:22:3","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8239:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"8244:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8235:3:3"},"nodeType":"YulFunctionCall","src":"8235:14:3"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8227:4:3"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8183:3:3","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8191:4:3","type":""}],"src":"8124:132:3"},{"body":{"nodeType":"YulBlock","src":"8336:40:3","statements":[{"nodeType":"YulAssignment","src":"8347:22:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8363:5:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8357:5:3"},"nodeType":"YulFunctionCall","src":"8357:12:3"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8347:6:3"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8319:5:3","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8329:6:3","type":""}],"src":"8262:114:3"},{"body":{"nodeType":"YulBlock","src":"8457:38:3","statements":[{"nodeType":"YulAssignment","src":"8467:22:3","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8479:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8475:3:3"},"nodeType":"YulFunctionCall","src":"8475:14:3"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"8467:4:3"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8444:3:3","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"8452:4:3","type":""}],"src":"8382:113:3"},{"body":{"nodeType":"YulBlock","src":"8612:73:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8629:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"8634:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8622:6:3"},"nodeType":"YulFunctionCall","src":"8622:19:3"},"nodeType":"YulExpressionStatement","src":"8622:19:3"},{"nodeType":"YulAssignment","src":"8650:29:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8669:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"8674:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8665:3:3"},"nodeType":"YulFunctionCall","src":"8665:14:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8650:11:3"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8584:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"8589:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8600:11:3","type":""}],"src":"8501:184:3"},{"body":{"nodeType":"YulBlock","src":"8804:34:3","statements":[{"nodeType":"YulAssignment","src":"8814:18:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"8829:3:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8814:11:3"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8776:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"8781:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8792:11:3","type":""}],"src":"8691:147:3"},{"body":{"nodeType":"YulBlock","src":"8940:73:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8957:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"8962:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8950:6:3"},"nodeType":"YulFunctionCall","src":"8950:19:3"},"nodeType":"YulExpressionStatement","src":"8950:19:3"},{"nodeType":"YulAssignment","src":"8978:29:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8997:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"9002:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8993:3:3"},"nodeType":"YulFunctionCall","src":"8993:14:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8978:11:3"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8912:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"8917:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8928:11:3","type":""}],"src":"8844:169:3"},{"body":{"nodeType":"YulBlock","src":"9063:261:3","statements":[{"nodeType":"YulAssignment","src":"9073:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9096:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9078:17:3"},"nodeType":"YulFunctionCall","src":"9078:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9073:1:3"}]},{"nodeType":"YulAssignment","src":"9107:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9130:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9112:17:3"},"nodeType":"YulFunctionCall","src":"9112:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9107:1:3"}]},{"body":{"nodeType":"YulBlock","src":"9270:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9272:16:3"},"nodeType":"YulFunctionCall","src":"9272:18:3"},"nodeType":"YulExpressionStatement","src":"9272:18:3"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9191:1:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9198:66:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"9266:1:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9194:3:3"},"nodeType":"YulFunctionCall","src":"9194:74:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9188:2:3"},"nodeType":"YulFunctionCall","src":"9188:81:3"},"nodeType":"YulIf","src":"9185:2:3"},{"nodeType":"YulAssignment","src":"9302:16:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9313:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"9316:1:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9309:3:3"},"nodeType":"YulFunctionCall","src":"9309:9:3"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9302:3:3"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9050:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"9053:1:3","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9059:3:3","type":""}],"src":"9019:305:3"},{"body":{"nodeType":"YulBlock","src":"9375:146:3","statements":[{"nodeType":"YulAssignment","src":"9385:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9408:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9390:17:3"},"nodeType":"YulFunctionCall","src":"9390:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9385:1:3"}]},{"nodeType":"YulAssignment","src":"9419:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9442:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9424:17:3"},"nodeType":"YulFunctionCall","src":"9424:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9419:1:3"}]},{"body":{"nodeType":"YulBlock","src":"9466:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9468:16:3"},"nodeType":"YulFunctionCall","src":"9468:18:3"},"nodeType":"YulExpressionStatement","src":"9468:18:3"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9460:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"9463:1:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9457:2:3"},"nodeType":"YulFunctionCall","src":"9457:8:3"},"nodeType":"YulIf","src":"9454:2:3"},{"nodeType":"YulAssignment","src":"9498:17:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9510:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"9513:1:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9506:3:3"},"nodeType":"YulFunctionCall","src":"9506:9:3"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9498:4:3"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9361:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"9364:1:3","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9370:4:3","type":""}],"src":"9330:191:3"},{"body":{"nodeType":"YulBlock","src":"9572:51:3","statements":[{"nodeType":"YulAssignment","src":"9582:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9611:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9593:17:3"},"nodeType":"YulFunctionCall","src":"9593:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9582:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9554:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9564:7:3","type":""}],"src":"9527:96:3"},{"body":{"nodeType":"YulBlock","src":"9671:48:3","statements":[{"nodeType":"YulAssignment","src":"9681:32:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9706:5:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9699:6:3"},"nodeType":"YulFunctionCall","src":"9699:13:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9692:6:3"},"nodeType":"YulFunctionCall","src":"9692:21:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9681:7:3"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9653:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9663:7:3","type":""}],"src":"9629:90:3"},{"body":{"nodeType":"YulBlock","src":"9770:32:3","statements":[{"nodeType":"YulAssignment","src":"9780:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"9791:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9780:7:3"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9752:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9762:7:3","type":""}],"src":"9725:77:3"},{"body":{"nodeType":"YulBlock","src":"9853:81:3","statements":[{"nodeType":"YulAssignment","src":"9863:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9878:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"9885:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9874:3:3"},"nodeType":"YulFunctionCall","src":"9874:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9863:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9835:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9845:7:3","type":""}],"src":"9808:126:3"},{"body":{"nodeType":"YulBlock","src":"9985:32:3","statements":[{"nodeType":"YulAssignment","src":"9995:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"10006:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9995:7:3"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9967:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9977:7:3","type":""}],"src":"9940:77:3"},{"body":{"nodeType":"YulBlock","src":"10051:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10068:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10071:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10061:6:3"},"nodeType":"YulFunctionCall","src":"10061:88:3"},"nodeType":"YulExpressionStatement","src":"10061:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10165:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10168:4:3","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10158:6:3"},"nodeType":"YulFunctionCall","src":"10158:15:3"},"nodeType":"YulExpressionStatement","src":"10158:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10189:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10192:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10182:6:3"},"nodeType":"YulFunctionCall","src":"10182:15:3"},"nodeType":"YulExpressionStatement","src":"10182:15:3"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10023:180:3"},{"body":{"nodeType":"YulBlock","src":"10252:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"10309:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10318:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10321:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10311:6:3"},"nodeType":"YulFunctionCall","src":"10311:12:3"},"nodeType":"YulExpressionStatement","src":"10311:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10275:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10300:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10282:17:3"},"nodeType":"YulFunctionCall","src":"10282:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10272:2:3"},"nodeType":"YulFunctionCall","src":"10272:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10265:6:3"},"nodeType":"YulFunctionCall","src":"10265:43:3"},"nodeType":"YulIf","src":"10262:2:3"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10245:5:3","type":""}],"src":"10209:122:3"},{"body":{"nodeType":"YulBlock","src":"10377:76:3","statements":[{"body":{"nodeType":"YulBlock","src":"10431:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10440:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10443:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10433:6:3"},"nodeType":"YulFunctionCall","src":"10433:12:3"},"nodeType":"YulExpressionStatement","src":"10433:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10400:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10422:5:3"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10407:14:3"},"nodeType":"YulFunctionCall","src":"10407:21:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10397:2:3"},"nodeType":"YulFunctionCall","src":"10397:32:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10390:6:3"},"nodeType":"YulFunctionCall","src":"10390:40:3"},"nodeType":"YulIf","src":"10387:2:3"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10370:5:3","type":""}],"src":"10337:116:3"},{"body":{"nodeType":"YulBlock","src":"10502:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"10559:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10568:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10571:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10561:6:3"},"nodeType":"YulFunctionCall","src":"10561:12:3"},"nodeType":"YulExpressionStatement","src":"10561:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10525:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10550:5:3"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10532:17:3"},"nodeType":"YulFunctionCall","src":"10532:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10522:2:3"},"nodeType":"YulFunctionCall","src":"10522:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10515:6:3"},"nodeType":"YulFunctionCall","src":"10515:43:3"},"nodeType":"YulIf","src":"10512:2:3"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10495:5:3","type":""}],"src":"10459:122:3"},{"body":{"nodeType":"YulBlock","src":"10630:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"10687:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10696:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10699:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10689:6:3"},"nodeType":"YulFunctionCall","src":"10689:12:3"},"nodeType":"YulExpressionStatement","src":"10689:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10653:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10678:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10660:17:3"},"nodeType":"YulFunctionCall","src":"10660:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10650:2:3"},"nodeType":"YulFunctionCall","src":"10650:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10643:6:3"},"nodeType":"YulFunctionCall","src":"10643:43:3"},"nodeType":"YulIf","src":"10640:2:3"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10623:5:3","type":""}],"src":"10587:122:3"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"Insufficient funds\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6f2c2ad39aaedd46886e391bc901303d7e920974b9a1bcc34e31ec251a2cd32b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n\n        mstore(add(pos, 0), \"This function is not public!\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f2c2ad39aaedd46886e391bc901303d7e920974b9a1bcc34e31ec251a2cd32b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f2c2ad39aaedd46886e391bc901303d7e920974b9a1bcc34e31ec251a2cd32b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100955760003560e01c806388db6ac61161005957806388db6ac61461021f5780638f97994b1461025c578063aa3d9a1514610285578063d15b223e146102c2578063e8812788146102eb57610123565b8063069fdaae146101285780631f14df69146101515780633bed33ce1461018e5780634762b976146101b75780634b1e4aa5146101f457610123565b366101235734600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45746800000000000000000000000000000000000000000000000000000000008152602001908152602001600020600082825461011a9190610e7f565b92505081905550005b600080fd5b34801561013457600080fd5b5061014f600480360381019061014a9190610b15565b610328565b005b34801561015d57600080fd5b5061017860048036038101906101739190610a87565b610435565b6040516101859190610e0f565b60405180910390f35b34801561019a57600080fd5b506101b560048036038101906101b09190610b51565b61045a565b005b3480156101c357600080fd5b506101de60048036038101906101d99190610b51565b610600565b6040516101eb9190610db4565b60405180910390f35b34801561020057600080fd5b50610209610624565b6040516102169190610d92565b60405180910390f35b34801561022b57600080fd5b5061024660048036038101906102419190610aec565b61067c565b6040516102539190610e0f565b60405180910390f35b34801561026857600080fd5b50610283600480360381019061027e9190610b7a565b6106d6565b005b34801561029157600080fd5b506102ac60048036038101906102a79190610aec565b610895565b6040516102b99190610d17565b60405180910390f35b3480156102ce57600080fd5b506102e960048036038101906102e49190610b7a565b6108c8565b005b3480156102f757600080fd5b50610312600480360381019061030d9190610aec565b6109f6565b60405161031f9190610d17565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad90610def565b60405180910390fd5b6001829080600181540180825580915050600190039060005260206000200160009091909190915055806002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6003602052816000526040600020602052806000526040600020600091509150505481565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4574680000000000000000000000000000000000000000000000000000000000815260200190815260200160002054101561050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050490610dcf565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45746800000000000000000000000000000000000000000000000000000000008152602001908152602001600020600082825461058d9190610ed5565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16816040516105b890610d02565b60006040518083038185875af1925050503d80600081146105f5576040519150601f19603f3d011682016040523d82523d6000602084013e6105fa565b606091505b50505050565b6001818154811061061057600080fd5b906000526020600020016000915090505481565b6060600180548060200260200160405190810160405280929190818152602001828054801561067257602002820191906000526020600020905b81548152602001906001019080831161065e575b5050505050905090565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020549050919050565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020541015610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076090610dcf565b60405180910390fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546107c99190610ed5565b925050819055506002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161083e929190610d69565b602060405180830381600087803b15801561085857600080fd5b505af115801561086c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108909190610ac3565b505050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008282546109289190610e7f565b925050819055506002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161099f93929190610d32565b602060405180830381600087803b1580156109b957600080fd5b505af11580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f19190610ac3565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600081359050610a4281610f8a565b92915050565b600081519050610a5781610fa1565b92915050565b600081359050610a6c81610fb8565b92915050565b600081359050610a8181610fcf565b92915050565b60008060408385031215610a9a57600080fd5b6000610aa885828601610a33565b9250506020610ab985828601610a5d565b9150509250929050565b600060208284031215610ad557600080fd5b6000610ae384828501610a48565b91505092915050565b600060208284031215610afe57600080fd5b6000610b0c84828501610a5d565b91505092915050565b60008060408385031215610b2857600080fd5b6000610b3685828601610a5d565b9250506020610b4785828601610a33565b9150509250929050565b600060208284031215610b6357600080fd5b6000610b7184828501610a72565b91505092915050565b60008060408385031215610b8d57600080fd5b6000610b9b85828601610a72565b9250506020610bac85828601610a5d565b9150509250929050565b6000610bc28383610c3b565b60208301905092915050565b610bd781610f09565b82525050565b6000610be882610e3a565b610bf28185610e52565b9350610bfd83610e2a565b8060005b83811015610c2e578151610c158882610bb6565b9750610c2083610e45565b925050600181019050610c01565b5085935050505092915050565b610c4481610f27565b82525050565b610c5381610f27565b82525050565b6000610c66601283610e6e565b91507f496e73756666696369656e742066756e647300000000000000000000000000006000830152602082019050919050565b6000610ca6601c83610e6e565b91507f546869732066756e6374696f6e206973206e6f74207075626c696321000000006000830152602082019050919050565b6000610ce6600083610e63565b9150600082019050919050565b610cfc81610f51565b82525050565b6000610d0d82610cd9565b9150819050919050565b6000602082019050610d2c6000830184610bce565b92915050565b6000606082019050610d476000830186610bce565b610d546020830185610bce565b610d616040830184610cf3565b949350505050565b6000604082019050610d7e6000830185610bce565b610d8b6020830184610cf3565b9392505050565b60006020820190508181036000830152610dac8184610bdd565b905092915050565b6000602082019050610dc96000830184610c4a565b92915050565b60006020820190508181036000830152610de881610c59565b9050919050565b60006020820190508181036000830152610e0881610c99565b9050919050565b6000602082019050610e246000830184610cf3565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610e8a82610f51565b9150610e9583610f51565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eca57610ec9610f5b565b5b828201905092915050565b6000610ee082610f51565b9150610eeb83610f51565b925082821015610efe57610efd610f5b565b5b828203905092915050565b6000610f1482610f31565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610f9381610f09565b8114610f9e57600080fd5b50565b610faa81610f1b565b8114610fb557600080fd5b50565b610fc181610f27565b8114610fcc57600080fd5b50565b610fd881610f51565b8114610fe357600080fd5b5056fea264697066735822122045f0097eece1a6c2ea79b151dfb93b51cfa0e088aab60177e59ec6cb0016e7bf64736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88DB6AC6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x88DB6AC6 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x8F97994B EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xAA3D9A15 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xD15B223E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xE8812788 EQ PUSH2 0x2EB JUMPI PUSH2 0x123 JUMP JUMPDEST DUP1 PUSH4 0x69FDAAE EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x1F14DF69 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x3BED33CE EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x4762B976 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x4B1E4AA5 EQ PUSH2 0x1F4 JUMPI PUSH2 0x123 JUMP JUMPDEST CALLDATASIZE PUSH2 0x123 JUMPI CALLVALUE PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH32 0x4574680000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AD SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH32 0x4574680000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP1 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH32 0x4574680000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x58D SWAP2 SWAP1 PUSH2 0xED5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH2 0x5B8 SWAP1 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x65E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x760 SWAP1 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0xED5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP3 SWAP2 SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x86C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x890 SWAP2 SWAP1 PUSH2 0xAC3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F1 SWAP2 SWAP1 PUSH2 0xAC3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA42 DUP2 PUSH2 0xF8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA57 DUP2 PUSH2 0xFA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA6C DUP2 PUSH2 0xFB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA81 DUP2 PUSH2 0xFCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAA8 DUP6 DUP3 DUP7 ADD PUSH2 0xA33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAB9 DUP6 DUP3 DUP7 ADD PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAE3 DUP5 DUP3 DUP6 ADD PUSH2 0xA48 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB0C DUP5 DUP3 DUP6 ADD PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB36 DUP6 DUP3 DUP7 ADD PUSH2 0xA5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB47 DUP6 DUP3 DUP7 ADD PUSH2 0xA33 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB71 DUP5 DUP3 DUP6 ADD PUSH2 0xA72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB9B DUP6 DUP3 DUP7 ADD PUSH2 0xA72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBAC DUP6 DUP3 DUP7 ADD PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC2 DUP4 DUP4 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBD7 DUP2 PUSH2 0xF09 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE8 DUP3 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0xBF2 DUP2 DUP6 PUSH2 0xE52 JUMP JUMPDEST SWAP4 POP PUSH2 0xBFD DUP4 PUSH2 0xE2A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC2E JUMPI DUP2 MLOAD PUSH2 0xC15 DUP9 DUP3 PUSH2 0xBB6 JUMP JUMPDEST SWAP8 POP PUSH2 0xC20 DUP4 PUSH2 0xE45 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xC01 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC44 DUP2 PUSH2 0xF27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xF27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC66 PUSH1 0x12 DUP4 PUSH2 0xE6E JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA6 PUSH1 0x1C DUP4 PUSH2 0xE6E JUMP JUMPDEST SWAP2 POP PUSH32 0x546869732066756E6374696F6E206973206E6F74207075626C69632100000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE6 PUSH1 0x0 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFC DUP2 PUSH2 0xF51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0D DUP3 PUSH2 0xCD9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD47 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0xD54 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0xD61 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCF3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD7E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0xD8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDAC DUP2 DUP5 PUSH2 0xBDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDE8 DUP2 PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE08 DUP2 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE24 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8A DUP3 PUSH2 0xF51 JUMP JUMPDEST SWAP2 POP PUSH2 0xE95 DUP4 PUSH2 0xF51 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xECA JUMPI PUSH2 0xEC9 PUSH2 0xF5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE0 DUP3 PUSH2 0xF51 JUMP JUMPDEST SWAP2 POP PUSH2 0xEEB DUP4 PUSH2 0xF51 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFD PUSH2 0xF5B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF14 DUP3 PUSH2 0xF31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF93 DUP2 PUSH2 0xF09 JUMP JUMPDEST DUP2 EQ PUSH2 0xF9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFAA DUP2 PUSH2 0xF1B JUMP JUMPDEST DUP2 EQ PUSH2 0xFB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFC1 DUP2 PUSH2 0xF27 JUMP JUMPDEST DUP2 EQ PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFD8 DUP2 PUSH2 0xF51 JUMP JUMPDEST DUP2 EQ PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT CREATE MULMOD PUSH31 0xECE1A6C2EA79B151DFB93B51CFA0E088AAB60177E59EC6CB0016E7BF64736F PUSH13 0x63430008000033000000000000 ","sourceMap":"179:1733:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1044:9;1013:8;:20;1022:10;1013:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;179:1733;;;;;491:231;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;345:63;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1083:222;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;216:35;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;728:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1789:120;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1520:263;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;269:52;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1311:203;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;845:128;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;491:231;591:5;;;;;;;;;;577:19;;:10;:19;;;569:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;638:18;662:6;638:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;704:12;676:17;:25;694:6;676:25;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;491:231;;:::o;345:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1083:222::-;1174:6;1143:8;:20;1152:10;1143:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;:37;;1135:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1243:6;1212:8;:20;1221:10;1212:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;1264:10;1256:24;;1288:6;1256:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1083:222;:::o;216:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;728:111::-;783:16;815:18;808:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;728:111;:::o;1789:120::-;1852:7;1875:8;:20;1884:10;1875:20;;;;;;;;;;;;;;;:28;1896:6;1875:28;;;;;;;;;;;;1868:35;;1789:120;;;:::o;1520:263::-;1632:6;1600:8;:20;1609:10;1600:20;;;;;;;;;;;;;;;:28;1621:6;1600:28;;;;;;;;;;;;:38;;1592:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1702:6;1670:8;:20;1679:10;1670:20;;;;;;;;;;;;;;;:28;1691:6;1670:28;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;1722:17;:25;1740:6;1722:25;;;;;;;;;;;;;;;;;;;;;1715:42;;;1758:10;1770:6;1715:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1520:263;;:::o;269:52::-;;;;;;;;;;;;;;;;;;;;;;:::o;1311:203::-;1414:6;1382:8;:20;1391:10;1382:20;;;;;;;;;;;;;;;:28;1403:6;1382:28;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;1434:17;:25;1452:6;1434:25;;;;;;;;;;;;;;;;;;;;;1427:46;;;1474:10;1494:4;1501:6;1427:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1311:203;;:::o;845:128::-;919:7;942:17;:25;960:6;942:25;;;;;;;;;;;;;;;;;;;;;935:32;;845:128;;;:::o;7:139:3:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:139::-;;524:6;511:20;502:29;;540:33;567:5;540:33;:::i;:::-;492:87;;;;:::o;585:407::-;;;710:2;698:9;689:7;685:23;681:32;678:2;;;726:1;723;716:12;678:2;769:1;794:53;839:7;830:6;819:9;815:22;794:53;:::i;:::-;784:63;;740:117;896:2;922:53;967:7;958:6;947:9;943:22;922:53;:::i;:::-;912:63;;867:118;668:324;;;;;:::o;998:278::-;;1114:2;1102:9;1093:7;1089:23;1085:32;1082:2;;;1130:1;1127;1120:12;1082:2;1173:1;1198:61;1251:7;1242:6;1231:9;1227:22;1198:61;:::i;:::-;1188:71;;1144:125;1072:204;;;;:::o;1282:262::-;;1390:2;1378:9;1369:7;1365:23;1361:32;1358:2;;;1406:1;1403;1396:12;1358:2;1449:1;1474:53;1519:7;1510:6;1499:9;1495:22;1474:53;:::i;:::-;1464:63;;1420:117;1348:196;;;;:::o;1550:407::-;;;1675:2;1663:9;1654:7;1650:23;1646:32;1643:2;;;1691:1;1688;1681:12;1643:2;1734:1;1759:53;1804:7;1795:6;1784:9;1780:22;1759:53;:::i;:::-;1749:63;;1705:117;1861:2;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1832:118;1633:324;;;;;:::o;1963:262::-;;2071:2;2059:9;2050:7;2046:23;2042:32;2039:2;;;2087:1;2084;2077:12;2039:2;2130:1;2155:53;2200:7;2191:6;2180:9;2176:22;2155:53;:::i;:::-;2145:63;;2101:117;2029:196;;;;:::o;2231:407::-;;;2356:2;2344:9;2335:7;2331:23;2327:32;2324:2;;;2372:1;2369;2362:12;2324:2;2415:1;2440:53;2485:7;2476:6;2465:9;2461:22;2440:53;:::i;:::-;2430:63;;2386:117;2542:2;2568:53;2613:7;2604:6;2593:9;2589:22;2568:53;:::i;:::-;2558:63;;2513:118;2314:324;;;;;:::o;2644:179::-;;2734:46;2776:3;2768:6;2734:46;:::i;:::-;2812:4;2807:3;2803:14;2789:28;;2724:99;;;;:::o;2829:118::-;2916:24;2934:5;2916:24;:::i;:::-;2911:3;2904:37;2894:53;;:::o;2983:732::-;;3131:54;3179:5;3131:54;:::i;:::-;3201:86;3280:6;3275:3;3201:86;:::i;:::-;3194:93;;3311:56;3361:5;3311:56;:::i;:::-;3390:7;3421:1;3406:284;3431:6;3428:1;3425:13;3406:284;;;3507:6;3501:13;3534:63;3593:3;3578:13;3534:63;:::i;:::-;3527:70;;3620:60;3673:6;3620:60;:::i;:::-;3610:70;;3466:224;3453:1;3450;3446:9;3441:14;;3406:284;;;3410:14;3706:3;3699:10;;3107:608;;;;;;;:::o;3721:108::-;3798:24;3816:5;3798:24;:::i;:::-;3793:3;3786:37;3776:53;;:::o;3835:118::-;3922:24;3940:5;3922:24;:::i;:::-;3917:3;3910:37;3900:53;;:::o;3959:316::-;;4122:67;4186:2;4181:3;4122:67;:::i;:::-;4115:74;;4219:20;4215:1;4210:3;4206:11;4199:41;4266:2;4261:3;4257:12;4250:19;;4105:170;;;:::o;4281:326::-;;4444:67;4508:2;4503:3;4444:67;:::i;:::-;4437:74;;4541:30;4537:1;4532:3;4528:11;4521:51;4598:2;4593:3;4589:12;4582:19;;4427:180;;;:::o;4613:297::-;;4793:83;4874:1;4869:3;4793:83;:::i;:::-;4786:90;;4902:1;4897:3;4893:11;4886:18;;4776:134;;;:::o;4916:118::-;5003:24;5021:5;5003:24;:::i;:::-;4998:3;4991:37;4981:53;;:::o;5040:379::-;;5246:147;5389:3;5246:147;:::i;:::-;5239:154;;5410:3;5403:10;;5228:191;;;:::o;5425:222::-;;5556:2;5545:9;5541:18;5533:26;;5569:71;5637:1;5626:9;5622:17;5613:6;5569:71;:::i;:::-;5523:124;;;;:::o;5653:442::-;;5840:2;5829:9;5825:18;5817:26;;5853:71;5921:1;5910:9;5906:17;5897:6;5853:71;:::i;:::-;5934:72;6002:2;5991:9;5987:18;5978:6;5934:72;:::i;:::-;6016;6084:2;6073:9;6069:18;6060:6;6016:72;:::i;:::-;5807:288;;;;;;:::o;6101:332::-;;6260:2;6249:9;6245:18;6237:26;;6273:71;6341:1;6330:9;6326:17;6317:6;6273:71;:::i;:::-;6354:72;6422:2;6411:9;6407:18;6398:6;6354:72;:::i;:::-;6227:206;;;;;:::o;6439:373::-;;6620:2;6609:9;6605:18;6597:26;;6669:9;6663:4;6659:20;6655:1;6644:9;6640:17;6633:47;6697:108;6800:4;6791:6;6697:108;:::i;:::-;6689:116;;6587:225;;;;:::o;6818:222::-;;6949:2;6938:9;6934:18;6926:26;;6962:71;7030:1;7019:9;7015:17;7006:6;6962:71;:::i;:::-;6916:124;;;;:::o;7046:419::-;;7250:2;7239:9;7235:18;7227:26;;7299:9;7293:4;7289:20;7285:1;7274:9;7270:17;7263:47;7327:131;7453:4;7327:131;:::i;:::-;7319:139;;7217:248;;;:::o;7471:419::-;;7675:2;7664:9;7660:18;7652:26;;7724:9;7718:4;7714:20;7710:1;7699:9;7695:17;7688:47;7752:131;7878:4;7752:131;:::i;:::-;7744:139;;7642:248;;;:::o;7896:222::-;;8027:2;8016:9;8012:18;8004:26;;8040:71;8108:1;8097:9;8093:17;8084:6;8040:71;:::i;:::-;7994:124;;;;:::o;8124:132::-;;8214:3;8206:11;;8244:4;8239:3;8235:14;8227:22;;8196:60;;;:::o;8262:114::-;;8363:5;8357:12;8347:22;;8336:40;;;:::o;8382:113::-;;8484:4;8479:3;8475:14;8467:22;;8457:38;;;:::o;8501:184::-;;8634:6;8629:3;8622:19;8674:4;8669:3;8665:14;8650:29;;8612:73;;;;:::o;8691:147::-;;8829:3;8814:18;;8804:34;;;;:::o;8844:169::-;;8962:6;8957:3;8950:19;9002:4;8997:3;8993:14;8978:29;;8940:73;;;;:::o;9019:305::-;;9078:20;9096:1;9078:20;:::i;:::-;9073:25;;9112:20;9130:1;9112:20;:::i;:::-;9107:25;;9266:1;9198:66;9194:74;9191:1;9188:81;9185:2;;;9272:18;;:::i;:::-;9185:2;9316:1;9313;9309:9;9302:16;;9063:261;;;;:::o;9330:191::-;;9390:20;9408:1;9390:20;:::i;:::-;9385:25;;9424:20;9442:1;9424:20;:::i;:::-;9419:25;;9463:1;9460;9457:8;9454:2;;;9468:18;;:::i;:::-;9454:2;9513:1;9510;9506:9;9498:17;;9375:146;;;;:::o;9527:96::-;;9593:24;9611:5;9593:24;:::i;:::-;9582:35;;9572:51;;;:::o;9629:90::-;;9706:5;9699:13;9692:21;9681:32;;9671:48;;;:::o;9725:77::-;;9791:5;9780:16;;9770:32;;;:::o;9808:126::-;;9885:42;9878:5;9874:54;9863:65;;9853:81;;;:::o;9940:77::-;;10006:5;9995:16;;9985:32;;;:::o;10023:180::-;10071:77;10068:1;10061:88;10168:4;10165:1;10158:15;10192:4;10189:1;10182:15;10209:122;10282:24;10300:5;10282:24;:::i;:::-;10275:5;10272:35;10262:2;;10321:1;10318;10311:12;10262:2;10252:79;:::o;10337:116::-;10407:21;10422:5;10407:21;:::i;:::-;10400:5;10397:32;10387:2;;10443:1;10440;10433:12;10387:2;10377:76;:::o;10459:122::-;10532:24;10550:5;10532:24;:::i;:::-;10525:5;10522:35;10512:2;;10571:1;10568;10561:12;10512:2;10502:79;:::o;10587:122::-;10660:24;10678:5;10660:24;:::i;:::-;10653:5;10650:35;10640:2;;10699:1;10696;10689:12;10640:2;10630:79;:::o"},"methodIdentifiers":{"balances(address,bytes32)":"1f14df69","depositTokens(uint256,bytes32)":"d15b223e","getTokenBalance(bytes32)":"88db6ac6","getWhitelistedSymbols()":"4b1e4aa5","getWhitelistedTokenAddress(bytes32)":"e8812788","whitelistToken(bytes32,address)":"069fdaae","whitelistedSymbols(uint256)":"4762b976","whitelistedTokens(bytes32)":"aa3d9a15","withdrawEther(uint256)":"3bed33ce","withdrawTokens(uint256,bytes32)":"8f97994b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWhitelistedSymbols\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"}],\"name\":\"getWhitelistedTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"whitelistToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whitelistedSymbols\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"whitelistedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bank.sol\":\"Bank\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/bank.sol\":{\"keccak256\":\"0x2b9e7a85704a3667a3eddf2e2692878f7a7063a433ab4271b4c9c3189bd3994c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d99cce22999cbd5f50c177c86ae271f104da1112e31e6cd48cba44d18422415e\",\"dweb:/ipfs/QmYWuqVpGzSpZN2hxeGQdCNkx5x6Y44bDSw1HRQTLhmRKb\"]}},\"version\":1}"}}}}}